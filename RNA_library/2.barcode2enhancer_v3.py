
import glob

fns=glob.glob("/clusterfs/vector/scratch/wzhang/20140424_Emma_Enhancer/Project_Levine/Sample_MLOTXA/dict/*") #Directory of DNA dictionary
Dict={}
for fn in fns:
	print "Reading "+fn.split("/")[-1]
	Bin=fn.split("/")[-1].split(".")[0]
	Dict[Bin]={}
	for line in open(fn).read().split("\n"):
		if line:
			a=line.split("\t")
			if not a[0] in Dict[Bin]:
				Dict[Bin][a[0]]=[a[1],{},int(a[3])]
			if not a[2] in Dict[Bin][a[0]][1]:
				Dict[Bin][a[0]][1][a[2]]=0
			Dict[Bin][a[0]][1][a[2]]+=int(a[4])




line_out=""
line_out3=""
line_out5=""
open("barcode2enhancer2reads.txt","w").write("") # Everything in RNA library
open("barcode2enhancer2reads_uniqueAll4.txt","w").write("") # Everything in RNA library that are unique in DNA library
open("barcode2enhancer2reads_uniqueAll4_overlap.txt","w").write("") # overlap of all RNA librarys
print "Reading barcode2reads.txt"
cline=0
for line in open("/clusterfs/vector/scratch/efarley/data/OtxaBR/Project_Levine/Sample_MLOTXAFnBR2_index6/barcode2reads.txt").read().rstrip().split("\n"): #barcode2reads.txt generated by RNAseq2reads.py
	a=line.split("\t")
	if a[0]:
		temp=line+"\t"
		Bin=a[0][:3]
		numUnique=0
		if Bin in Dict:
			if a[0] in Dict[Bin]:

				if Dict[Bin][a[0]][0]=="u":
					numUnique+=1

				evaluator=0
				DominantEnhancer=""
				for enhancer in Dict[Bin][a[0]][1]:
					val=Dict[Bin][a[0]][1][enhancer]
					if val>evaluator:
						DominantEnhancer=enhancer
						evaluator=val

#				print Dict[Bin][a[0]]
#				print DominantEnhancer
				temp+=Dict[Bin][a[0]][0]+"\t"+str(Dict[Bin][a[0]][2])+"\t"+DominantEnhancer+"\t"+str(Dict[Bin][a[0]][1][DominantEnhancer])
		temp+="\n"
		line_out+=temp
		if numUnique>0 and evaluator>0:
			line_out3+=temp
			if min([float(i) for i in a[1:]])>0:
				line_out5+=temp
		cline+=1
		if cline/10000==cline/10000.0:
			print cline
			open("barcode2enhancer2reads.txt","a").write(line_out)
			open("barcode2enhancer2reads_uniqueAll4.txt","a").write(line_out3)
			open("barcode2enhancer2reads_uniqueAll4_overlap.txt","a").write(line_out5)
			line_out=""
			line_out3=""
			line_out5=""
open("barcode2enhancer2reads.txt","a").write(line_out)
open("barcode2enhancer2reads_uniqueAll4.txt","a").write(line_out3)
open("barcode2enhancer2reads_uniqueAll4_overlap.txt","a").write(line_out5)




####################################################################################################
#generate DNA_library.fa as the background for motif search
####################################################################################################



line_out=""
enhancers={}
for Bin in Dict:
	for barcode in Dict[Bin]:

		numUnique=0
		if Dict[Bin][barcode][0]=="u":
			numUnique+=1

		evaluator=0
		DominantEnhancer=""
		for enhancer in Dict[Bin][barcode][1]:
			if enhancer:
				val=Dict[Bin][barcode][1][enhancer]
				if val>evaluator:
					DominantEnhancer=enhancer
					evaluator=val
		if numUnique>0 and evaluator>0:
			enhancers[DominantEnhancer]=1

ID=0
for enhancer in enhancers:
	ID+=1
	line_out+=">"+str(ID)+"\n"+enhancer+"\n"


open("allEnhancerInDNALibrary_u.fa","w").write(line_out)

print ID




####################################################################################################
#collapse enhancers with multiple barcodes, and gives the reads of the highest barcode.
####################################################################################################



import numpy as np

enhancers={}

for line in open("barcode2enhancer2reads_uniqueAll4.txt").read().rstrip().split("\n"):
	a=line.split("\t")
	if a[7]:
		if not a[7] in enhancers:
			enhancers[a[7]]=[a[0],[[float(i) for i in a[1:5]]],[a[6]],[a[8]]]
		else:
			enhancers[a[7]][0]+=","+a[0]
			enhancers[a[7]][1].append([float(i) for i in a[1:5]])
			enhancers[a[7]][2].append(a[6])
			enhancers[a[7]][3].append(a[8])

line_out=""
for enhancer in enhancers:
	line_out+=enhancers[enhancer][0]+"\t"+"\t".join([str(i) for i in np.max(enhancers[enhancer][1],0)])+"\tu\t"+str(max(enhancers[enhancer][2]))+"\t"+enhancer+"\t"+str(max(enhancers[enhancer][3]))+"\n"

open("barcode2enhancer2reads_uniqueAll4_collapsed.txt","w").write(line_out)




####################################################################################################
#generate forground for motif search
####################################################################################################



line_out=""
ID=0
for line in open("barcode2enhancer2reads_uniqueAll4_collapsed.txt").read().rstrip().split("\n"):
	a=line.split("\t")
	if float(a[1])>=4 or float(a[2])>=4: # get Fn2 or Fn3 >= 4
		ID+=1
		line_out+=">"+str(ID)+" "+" ".join(a[1:5])+"\n"+a[-2]+"\n"

open("enhancers_cut4anyFn23_20150110.fa","w").write(line_out)



#####################################################################################################
##generate Fn2 and Fn3 for motif search separately
#####################################################################################################
#
#
#
#line_out=""
#ID=0
#for line in open("barcode2enhancer2reads_uniqueAll4_collapsed.txt").read().rstrip().split("\n"):
#	a=line.split("\t")
#	if float(a[1])>=4:
#		ID+=1
#		line_out+=">"+str(ID)+" "+" ".join(a[1:5])+"\n"+a[-2]+"\n"
#
#open("enhancers_cut4Fn2_20150226.fa","w").write(line_out)
#
#line_out=""
#ID=0
#for line in open("barcode2enhancer2reads_uniqueAll4_collapsed.txt").read().rstrip().split("\n"):
#	a=line.split("\t")
#	if float(a[2])>=4:
#		ID+=1
#		line_out+=">"+str(ID)+" "+" ".join(a[1:5])+"\n"+a[-2]+"\n"
#
#open("enhancers_cut4Fn3_20150226.fa","w").write(line_out)
